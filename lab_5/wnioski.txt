Parametry do testowania:

test 1
    board_size = 20
    population_size = 100
    tournament_size = 5
    max_generations = 1000
    crossover_probability = 0.7
    mutation_probability = 0.3

test 2
    board_size = 20
    population_size = 1000
    tournament_size = 7
    max_generations = 1000
    crossover_probability = 0.5
    mutation_probability = 0.1

test 3
    board_size = 20
    population_size = 100
    tournament_size = 7
    max_generations = 1000
    crossover_probability = 0.6
    mutation_probability = 0.1

wnioski:
Na podstawie przeprowadzonych testów mozna stwierdzić,
że przy wiekszej liczbie osobników / populacij (np. 1000) i wiekszej ilości turniejów (np. 7)
oraz z niższym prawdopodobieństwem mutacji (np. 0.1) algorytm wydaje się dzialać stabilniej i szybciej zbliżac się do
rozwiazań z minimalną liczba atakow (przeważnie 1)
Przy mniejszej populacji (np. 100) i mutacji (np. 0.3) wyniki są rozproszone / losowe na co wskazuje liczba ataków (1-4)
Wartość prawdopodobieństwa krzyżowego (np. 0.5-0.7) również wpływa na rozwiązania,
bardziej umiarkowane wartości sprzyjają szybszemu osiagnieciu stabilnego stanu.